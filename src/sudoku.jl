#-------------------------------------------------------------------------------
# Sudoku problem
#-------------------------------------------------------------------------------

#-------------------------------------------------------------------------------
#  Load packages
#-------------------------------------------------------------------------------
using JuMP, HiGHS, Printf

#-------------------------------------------------------------------------------
# Additional functions
#-------------------------------------------------------------------------------

include("additional_functions.jl")

avdelare = repeat('-',60)

#-------------------------------------------------------------------------------
# Input data file
#-------------------------------------------------------------------------------
include("sudo-data1.jl")
#-------------------------------------------------------------------------------
# given[i,j] is k if digit k is placed at row j and column j and it is 0 if the place is empty. 						
#-------------------------------------------------------------------------------


#-------------------------------------------------------------------------------
# The model saved as SUDO
#-------------------------------------------------------------------------------
SUDO  = Model(HiGHS.Optimizer)

#-------------------------------------------------------------------------------
# Define variables
# x[i,j,k] = 1 if pos (i,j) contains digit k.
#-------------------------------------------------------------------------------
@variable(SUDO, x[1:9, 1:9, 1:9], Bin)
#-------------------------------------------------------------------------------


#-------------------------------------------------------------------------------
# Objective function
#-------------------------------------------------------------------------------
# You don't need to have any objective function. 
#-------------------------------------------------------------------------------


#-------------------------------------------------------------------------------
# Add constraints. Last constraint is added. 
#-------------------------------------------------------------------------------


#-------------------------------------------------------------------------------


#-------------------------------------------------------------------------------


#-------------------------------------------------------------------------------
 

#-------------------------------------------------------------------------------
@constraint(SUDO, fix[i in 1:9, j in 1:9; given[i,j] > 0],
    x[i, j, given[i, j]] == 1 )
#--------------------------------------------------------------------------------

#-------------------------------------------------------------------------------
# Display defined problem
#-------------------------------------------------------------------------------
#println(avdelare)
#println("Sudoku problem")
#println(avdelare)
#print(SUDO)
#println(avdelare)
#-------------------------------------------------------------------------------


#-------------------------------------------------------------------------------
#Solve the optimisation problem
#-------------------------------------------------------------------------------
println("\n\n\n>>> SOLVING SET COVERING PROBLEM <<<\n")
solution = optimize!(SUDO)

println("\n\n\n>>> OPTIMAL SOLUTION <<<\n")
println(avdelare)
#-------------------------------------------------------------------------------
println("Sudoku Solution:\n")
#-------------------------------------------------------------------------------
# Print without lines
#for i = 1:9
#    for j = 1:9
#        @printf("%i   ",  sum(k*value(x[i,j,k]) for k in 1:9))
#    end
#println("\n")
#end
#-------------------------------------------------------------------------------
# Print with lines
X = zeros(9,9)
for i = 1:9
    for j = 1:9
       X[i,j] = sum(k*value(x[i,j,k]) for k in 1:9)
    end
end
print_sudoku(X)
#-------------------------------------------------------------------------------